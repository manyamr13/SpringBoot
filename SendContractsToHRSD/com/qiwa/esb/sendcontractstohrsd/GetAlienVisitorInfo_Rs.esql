

BROKER SCHEMA com.qiwa.esb.sendcontractstohrsd
PATH Qiwa.Framework.Lib;


CREATE COMPUTE MODULE GetAlienVisitorInfo_Rs
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.SendContractsToHRSD.SendContractsToHRSDFlow.Variables;
		
		DECLARE serviceResponseMsg REFERENCE TO InputRoot.XMLNSC.*:GetAlienVisitorInfoRs;


		IF NOT EXISTS (serviceResponseMsg.Body.*:GetAlienVisitorInfoResponse.*:GetAlienVisitorInfoResult[])
			AND serviceResponseMsg.ResponseStatus.Code <> '00000000' THEN
			SET Environment.Variables.Errors.SendContracts.Code=serviceResponseMsg.ResponseStatus.Code;
			RETURN FALSE;

		END IF;

		DECLARE serviceResult REFERENCE TO serviceResponseMsg.Body.*:GetAlienVisitorInfoResponse.*:GetAlienVisitorInfoResult;
		SET Environment.Variables.OutputRefVisitorFirst = serviceResponseMsg.Body.*:GetAlienVisitorInfoResponse.*:GetAlienVisitorInfoResult;
/*		
		SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.LaborerName.NmeEn = TRIM(serviceResult.*:TranslatedName);
		SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.LaborerName.NameAr = TRIM(serviceResult.*:Name);
		SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.LaborerTypeId = loadedPropertiesRef.Two;
		SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.LaborerIdNo = TRIM(serviceResult.*:Id);
--		SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.LaborerIdExpiryDate = TRIM(serviceResult.*:ResidencyExpiryDateGreg);
		SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.LaborerBirthDate.GregDate = SUBSTRING(serviceResult.*:BirthDateGreg FROM 1 FOR 10);
		
		SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.LaborerBirthDate.HijriDate = TRIM(serviceResult.*:BirthDateHegira);
		IF UPPER(serviceResult.*:Sex) = 'MALE' THEN
			SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.Gender.Code = loadedPropertiesRef.One;
			SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.Gender.NameAr = loadedPropertiesRef.MaleAr;
			SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.Gender.NmeEn = loadedPropertiesRef.MaleEn;
			
		ELSEIF UPPER(serviceResult.*:Sex) = 'FEMALE' THEN
			SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.Gender.Code = loadedPropertiesRef.Two;
			SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.Gender.NameAr = loadedPropertiesRef.FemaleAr;
				SET Environment.Variables.OutputRefCitizenAlien.LaborerInfo.Gender.NmeEn = loadedPropertiesRef.MaleEn;
			
		END IF;
		SET Environment.Variables.OutputRefCitizenAlien.SponsorTypeCode = TRIM(serviceResult.*:SponsorTypeCode);
		SET Environment.Variables.OutputRefCitizenAlien.IdType = TRIM(serviceResult.*:IdType);
		SET Environment.Variables.OutputRefCitizenAlien.SponsorId = TRIM(serviceResult.*:SponsorId);
		SET Environment.Variables.OutputRefCitizenAlien.SponsorOccupation = TRIM(serviceResult.*:SponsorOccupation);
		SET Environment.Variables.OutputRefCitizenAlien.LaborOfficeId = TRIM(serviceResult.*:MolFileNoLoc);
		SET Environment.Variables.OutputRefCitizenAlien.SequenceNumber = TRIM(serviceResult.*:MolFileNo);
		SET Environment.Variables.OutputRefCitizenAlien.StatusCode = TRIM(serviceResult.*:StatusCode);
		SET Environment.Variables.OutputRefCitizenAlien.Status = TRIM(serviceResult.*:Status);
		SET Environment.Variables.OutputRefCitizenAlien.FinalExitViasaIssued = TRIM(serviceResult.*:FinalExitViasaIssued);
		SET Environment.Variables.OutputRefCitizenAlien.EntryDateGreg = TRIM(serviceResult.*:EntryDateGreg);
		SET Environment.Variables.OutputRefCitizenAlien.MaritalStatusCode = TRIM(serviceResult.*:MaritalStatusCode);
		SET Environment.Variables.OutputRefCitizenAlien.ReligionCode = TRIM(serviceResult.*:ReligionCode);
		SET Environment.Variables.OutputRefCitizenAlien.NationalityCode = TRIM(serviceResult.*:NationalityCode);
		SET Environment.Variables.OutputRefCitizenAlien.OccupationCode = TRIM(serviceResult.*:OccupationCode);
*/			
			CALL Get_NICHRSDCodes (
							CAST('1' AS INT),
							CAST('2' AS INT),
							COALESCE(serviceResult.*:NationalityCode, NULL),
							Environment.Variables.DB.NICHRSDCodes[]
							);



		RETURN FALSE;

	END;
	
	CREATE PROCEDURE Get_NICHRSDCodes(IN CodeTypeId INT,
	IN IsFromNIC INT,
	IN CurrentIds CHARACTER)
	LANGUAGE DATABASE DYNAMIC RESULT SETS 1
	EXTERNAL NAME "dbo.Get_NICHRSDCodes";

END MODULE;
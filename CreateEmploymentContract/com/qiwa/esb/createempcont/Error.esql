

BROKER SCHEMA com.qiwa.esb.createempcont

PATH Qiwa.Framework.Lib;


CREATE COMPUTE MODULE Error
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--copying headers
		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;
		--refeer to main iput header
		DECLARE InHeaderRef REFERENCE TO Environment.Variables.Input.Header;
		DECLARE LoadedPropertiesRef REFERENCE TO Environment.Properties.CreateEmploymentContract.HTTP_CreateEmpContract.Variables;
		-- create response header
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.CreateEmploymentContractRs NAME 'Header';
		DECLARE OutHeaderRef REFERENCE TO OutputRoot.XMLNSC.CreateEmploymentContractRs.Header;
		CALL Create_esbXML_Response_Header(Environment.Variables.MWResponse.status,InHeaderRef,OutHeaderRef);

		IF CAST(Environment.Variables.MWResponse.status AS CHARACTER) = CAST(LoadedPropertiesRef.ExistenceError AS CHARACTER) THEN
			DECLARE EnglishMessages CHARACTER '';
			DECLARE ArabicMessages CHARACTER '';
			IF CAST(Environment.Variables.DB.ExtEntConLookupRs.OccupationExists AS BOOLEAN) = CAST(LoadedPropertiesRef.ExistsFalse AS BOOLEAN) THEN
				SET EnglishMessages = ' Occupation';
				SET ArabicMessages = ' الوظيفة';
			END IF;
			IF CAST(Environment.Variables.DB.ExtEntConLookupRs.WorkLocationExists AS BOOLEAN) = CAST(LoadedPropertiesRef.ExistsFalse AS BOOLEAN) THEN
				IF EnglishMessages <> '' THEN
					SET EnglishMessages = EnglishMessages || ', ';
					SET ArabicMessages = ArabicMessages || ', ';
				END IF;
				SET EnglishMessages = EnglishMessages || ' Work location';
				SET ArabicMessages = ArabicMessages || ' ومكان العمل';
			END IF;
			IF CAST(Environment.Variables.DB.ExtEntConLookupRs.SpecialityExists AS BOOLEAN) = CAST(LoadedPropertiesRef.ExistsFalse AS BOOLEAN) THEN
				SET EnglishMessages = EnglishMessages || ' Speciality';
				SET ArabicMessages = ArabicMessages || ' التخصص';
			END IF;
			IF EnglishMessages <> '' THEN
				SET OutHeaderRef.ResponseStatus.EnglishMsg = OutHeaderRef.ResponseStatus.EnglishMsg || EnglishMessages || '.';
				SET OutHeaderRef.ResponseStatus.ArabicMsg = OutHeaderRef.ResponseStatus.ArabicMsg || ArabicMessages || '.';
			END IF;

		END IF;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;